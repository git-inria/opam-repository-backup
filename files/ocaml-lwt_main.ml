include Init




let _ = command "ocamldep.opt -modules  src/core/lwt_condition.mli > src/core/lwt_condition.mli.depends" 
let _ = command "ocamldep.opt -modules  src/core/lwt.mli > src/core/lwt.mli.depends" 
let _ = command "ocamldep.opt -modules  src/core/lwt_mutex.mli > src/core/lwt_mutex.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt.cmi src/core/lwt.mli" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_mutex.cmi src/core/lwt_mutex.mli" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_condition.cmi src/core/lwt_condition.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  '-parser' 'Camlp4QuotationCommon'  '-parser' 'Camlp4OCamlOriginalQuotationExpander'  '-parser' 'Camlp4GrammarParser'  \" syntax/pa_lwt_options.ml > syntax/pa_lwt_options.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  syntax/pa_lwt_log.mli > syntax/pa_lwt_log.mli.depends" 
let _ = command "ocamlc.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_lwt_log.cmi -I %s/camlp4 syntax/pa_lwt_log.mli" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  '-parser' 'Camlp4QuotationCommon'  '-parser' 'Camlp4OCamlOriginalQuotationExpander'  '-parser' 'Camlp4GrammarParser'  \" syntax/pa_lwt_log.ml > syntax/pa_lwt_log.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_lwt_options.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' \" syntax/pa_lwt_options.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  '-parser' 'Camlp4QuotationCommon'  '-parser' 'Camlp4OCamlOriginalQuotationExpander'  '-parser' 'Camlp4GrammarParser'  \" syntax/pa_optcomp.ml > syntax/pa_optcomp.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  syntax/pa_lwt.mli > syntax/pa_lwt.mli.depends" 
let _ = command "ocamlc.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_lwt.cmi -I %s/camlp4 syntax/pa_lwt.mli" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  '-parser' 'Camlp4QuotationCommon'  '-parser' 'Camlp4OCamlOriginalQuotationExpander'  '-parser' 'Camlp4GrammarParser'  \" syntax/pa_lwt.ml > syntax/pa_lwt.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_lwt_log.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' \" syntax/pa_lwt_log.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_optcomp.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' \" syntax/pa_optcomp.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_lwt.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' \" syntax/pa_lwt.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_condition.ml > src/core/lwt_condition.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/core/lwt_sequence.mli > src/core/lwt_sequence.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_sequence.cmi src/core/lwt_sequence.mli" 
let _ = command "ocamldep.opt -modules  src/core/lwt_list.mli > src/core/lwt_list.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_list.cmi src/core/lwt_list.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_list.ml > src/core/lwt_list.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt.ml > src/core/lwt.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_mutex.ml > src/core/lwt_mutex.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/core/lwt_mvar.mli > src/core/lwt_mvar.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_mvar.cmi src/core/lwt_mvar.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_mvar.ml > src/core/lwt_mvar.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/core/lwt_pool.mli > src/core/lwt_pool.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_pool.cmi src/core/lwt_pool.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_pool.ml > src/core/lwt_pool.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_sequence.ml > src/core/lwt_sequence.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/core/lwt_stream.mli > src/core/lwt_stream.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_stream.cmi src/core/lwt_stream.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_stream.ml > src/core/lwt_stream.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/core/lwt_switch.mli > src/core/lwt_switch.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_switch.cmi src/core/lwt_switch.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_switch.ml > src/core/lwt_switch.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/core/lwt_util.mli > src/core/lwt_util.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_util.cmi src/core/lwt_util.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_util.ml > src/core/lwt_util.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/core/lwt_pqueue.mli > src/core/lwt_pqueue.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_pqueue.cmi src/core/lwt_pqueue.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/core/lwt_pqueue.ml > src/core/lwt_pqueue.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_condition.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_condition.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_list.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_list.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_mutex.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_mutex.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_mvar.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_mvar.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_pool.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_pool.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_sequence.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_sequence.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_stream.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_stream.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_switch.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_switch.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_util.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_util.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_pqueue.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_pqueue.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -a -o src/core/lwt.cma src/core/lwt_sequence.cmo src/core/lwt.cmo src/core/lwt_mutex.cmo src/core/lwt_condition.cmo src/core/lwt_list.cmo src/core/lwt_mvar.cmo src/core/lwt_pool.cmo src/core/lwt_stream.cmo src/core/lwt_switch.cmo src/core/lwt_util.cmo src/core/lwt_pqueue.cmo" 
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_sequence.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_sequence.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -shared -o src/core/lwt.cmxs src/core/lwt.cmx" 
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_mutex.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_mutex.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_list.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_list.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_condition.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_condition.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_mvar.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_mvar.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_pool.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_pool.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_stream.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_stream.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_switch.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_switch.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_util.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_util.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/top -I src/ssl -o src/core/lwt_pqueue.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/core/lwt_pqueue.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -a -o src/core/lwt.cmxa src/core/lwt_sequence.cmx src/core/lwt.cmx src/core/lwt_mutex.cmx src/core/lwt_condition.cmx src/core/lwt_list.cmx src/core/lwt_mvar.cmx src/core/lwt_pool.cmx src/core/lwt_stream.cmx src/core/lwt_switch.cmx src/core/lwt_util.cmx src/core/lwt_pqueue.cmx" 
let _ = command "ocamlc.opt -ccopt -I/usr/include -c src/unix/lwt_unix_stubs.c" 
let _ = command "mv lwt_unix_stubs.o src/unix/lwt_unix_stubs.o"
let _ = command "ocamlc.opt -ccopt -I/usr/include -c src/unix/lwt_libev_stubs.c" 
let _ = command "mv lwt_libev_stubs.o src/unix/lwt_libev_stubs.o"
let _ = command "ocamlmklib -o src/unix/lwt-unix -lpthread -lev -L/usr/lib src/unix/lwt_unix_stubs.o src/unix/lwt_libev_stubs.o"
let _ = command "ocamldep.opt -modules  src/unix/lwt_chan.mli > src/unix/lwt_chan.mli.depends" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_io.mli > src/unix/lwt_io.mli.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/unix/lwt_bytes.mli > src/unix/lwt_bytes.mli.depends" 
let _ = command "ocamldep.opt -modules  src/unix/lwt_unix.mli > src/unix/lwt_unix.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_unix.cmi src/unix/lwt_unix.mli" 
let _ = command "ocamldep.opt -modules  src/unix/lwt_sys.mli > src/unix/lwt_sys.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_bytes.cmi src/unix/lwt_bytes.mli" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_sys.cmi src/unix/lwt_sys.mli" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_io.cmi -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_io.mli" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_chan.cmi src/unix/lwt_chan.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_chan.ml > src/unix/lwt_chan.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/unix/lwt_daemon.mli > src/unix/lwt_daemon.mli.depends" 
let _ = command "ocamldep.opt -modules  src/unix/lwt_log.mli > src/unix/lwt_log.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_log.cmi src/unix/lwt_log.mli" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_daemon.cmi src/unix/lwt_daemon.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_daemon.ml > src/unix/lwt_daemon.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/unix/lwt_main.mli > src/unix/lwt_main.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_main.cmi src/unix/lwt_main.mli" 
let _ = command "ocamldep.opt -modules  src/unix/lwt_gc.mli > src/unix/lwt_gc.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_gc.cmi src/unix/lwt_gc.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_gc.ml > src/unix/lwt_gc.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_io.ml > src/unix/lwt_io.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_log.ml > src/unix/lwt_log.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/unix/lwt_log_rules.mli > src/unix/lwt_log_rules.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_log_rules.cmi src/unix/lwt_log_rules.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_main.ml > src/unix/lwt_main.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/unix/lwt_engine.mli > src/unix/lwt_engine.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_engine.cmi src/unix/lwt_engine.mli" 
let _ = command "ocamldep.opt -modules  src/unix/lwt_process.mli > src/unix/lwt_process.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_process.cmi src/unix/lwt_process.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_process.ml > src/unix/lwt_process.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/unix/lwt_throttle.mli > src/unix/lwt_throttle.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_throttle.cmi src/unix/lwt_throttle.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_throttle.ml > src/unix/lwt_throttle.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules  src/unix/lwt_timeout.mli > src/unix/lwt_timeout.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_timeout.cmi src/unix/lwt_timeout.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_timeout.ml > src/unix/lwt_timeout.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_unix.ml > src/unix/lwt_unix.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_sys.ml > src/unix/lwt_sys.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_engine.ml > src/unix/lwt_engine.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_bytes.ml > src/unix/lwt_bytes.ml.depends" ocaml_lib
let _ = command "ocamllex.opt -q src/unix/lwt_log_rules.mll"
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/unix/lwt_log_rules.ml > src/unix/lwt_log_rules.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_chan.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_chan.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_daemon.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_daemon.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_gc.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_gc.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_io.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_io.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_log.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_log.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_main.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_main.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_process.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_process.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_throttle.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_throttle.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_timeout.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_timeout.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_unix.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_unix.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_sys.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_sys.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_engine.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_engine.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_bytes.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_bytes.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_log_rules.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_log_rules.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -a -dllib -llwt-unix -o src/unix/lwt-unix.cma -cclib -llwt-unix -cclib -lpthread -cclib -lev -cclib -L/usr/lib src/unix/lwt_engine.cmo src/unix/lwt_main.cmo src/unix/lwt_sys.cmo src/unix/lwt_unix.cmo src/unix/lwt_bytes.cmo src/unix/lwt_io.cmo src/unix/lwt_chan.cmo src/unix/lwt_log_rules.cmo src/unix/lwt_log.cmo src/unix/lwt_daemon.cmo src/unix/lwt_gc.cmo src/unix/lwt_process.cmo src/unix/lwt_throttle.cmo src/unix/lwt_timeout.cmo" 
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_engine.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_engine.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_main.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_main.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_sys.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_sys.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_unix.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_unix.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_bytes.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_bytes.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_io.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_io.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_log_rules.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_log_rules.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_log.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_log.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_chan.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_chan.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_daemon.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_daemon.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_gc.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_gc.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_process.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_process.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_throttle.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_throttle.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/unix/lwt_timeout.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/unix/lwt_timeout.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -a -o src/unix/lwt-unix.cmxa -cclib -llwt-unix -cclib -lpthread -cclib -lev -cclib -L/usr/lib src/unix/lwt_engine.cmx src/unix/lwt_main.cmx src/unix/lwt_sys.cmx src/unix/lwt_unix.cmx src/unix/lwt_bytes.cmx src/unix/lwt_io.cmx src/unix/lwt_chan.cmx src/unix/lwt_log_rules.cmx src/unix/lwt_log.cmx src/unix/lwt_daemon.cmx src/unix/lwt_gc.cmx src/unix/lwt_process.cmx src/unix/lwt_throttle.cmx src/unix/lwt_timeout.cmx" 
let _ = command "ocamlopt.opt -shared -linkall -I src/unix -o src/unix/lwt-unix.cmxs -cclib -L/usr/lib src/unix/lwt-unix.cmxa" 
let _ = command "ocamldep.opt -modules  tests/test.mli > tests/test.mli.depends" 
let _ = command "ocamlc.opt -c -g -I tests -I syntax -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/test.cmi tests/test.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" tests/test.ml > tests/test.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I tests -I syntax -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/test.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/test.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -a -o tests/test.cma tests/test.cmo" 
let _ = command "ocamlopt.opt -c -g -I tests -I syntax -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/test.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/test.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -shared -o tests/test.cmxs tests/test.cmx" 
let _ = command "ocamlopt.opt -a -o tests/test.cmxa tests/test.cmx" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" tests/unix/main.ml > tests/unix/main.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" tests/unix/test_lwt_io.ml > tests/unix/test_lwt_io.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" tests/unix/test_lwt_io_non_block.ml > tests/unix/test_lwt_io_non_block.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I tests -I tests/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/unix/test_lwt_io.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/unix/test_lwt_io.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I tests -I tests/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/unix/test_lwt_io_non_block.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/unix/test_lwt_io_non_block.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I tests -I tests/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/unix/main.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/unix/main.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I tests -I tests/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/unix/test_lwt_io.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/unix/test_lwt_io.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I tests -I tests/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/unix/test_lwt_io_non_block.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/unix/test_lwt_io_non_block.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I tests -I tests/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/unix/main.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/unix/main.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -g -I src/unix -o tests/unix/main.native %s/unix.cmxa %s/bigarray.cmxa src/core/lwt.cmxa src/unix/lwt-unix.cmxa tests/test.cmxa tests/unix/test_lwt_io.cmx tests/unix/test_lwt_io_non_block.cmx tests/unix/main.cmx" ocaml_lib ocaml_lib



let _ = command "ocamlc.opt -a -o syntax/lwt-syntax.cma syntax/pa_lwt.cmo" 
let _ = command "ocamlopt.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_lwt_options.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' \" syntax/pa_lwt_options.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_lwt.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' \" syntax/pa_lwt.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -a -o syntax/lwt-syntax.cmxa syntax/pa_lwt.cmx" 
let _ = command "ocamlopt.opt -shared -linkall -o syntax/lwt-syntax.cmxs syntax/lwt-syntax.cmxa" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" tests/core/main.ml > tests/core/main.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" tests/core/test_lwt.ml > tests/core/test_lwt.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" tests/core/test_lwt_stream.ml > tests/core/test_lwt_stream.ml.depends" ocaml_lib
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" tests/core/test_lwt_util.ml > tests/core/test_lwt_util.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I tests -I tests/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/core/test_lwt.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/core/test_lwt.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I tests -I tests/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/core/test_lwt_stream.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/core/test_lwt_stream.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I tests -I tests/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/core/test_lwt_util.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/core/test_lwt_util.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I tests -I tests/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/core/main.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/core/main.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I tests -I tests/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/core/test_lwt.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/core/test_lwt.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I tests -I tests/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/core/test_lwt_stream.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/core/test_lwt_stream.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I tests -I tests/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/core/test_lwt_util.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/core/test_lwt_util.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I tests -I tests/core -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o tests/core/main.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" tests/core/main.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -g -I src/unix -o tests/core/main.native %s/unix.cmxa %s/bigarray.cmxa src/core/lwt.cmxa src/unix/lwt-unix.cmxa tests/test.cmxa tests/core/test_lwt.cmx tests/core/test_lwt_stream.cmx tests/core/test_lwt_util.cmx tests/core/main.cmx" ocaml_lib ocaml_lib



let _ = command "ocamldep.opt -modules  src/preemptive/lwt_preemptive.mli > src/preemptive/lwt_preemptive.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I src/preemptive -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/preemptive/lwt_preemptive.cmi -thread src/preemptive/lwt_preemptive.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/preemptive/lwt_preemptive.ml > src/preemptive/lwt_preemptive.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I src/preemptive -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/preemptive/lwt_preemptive.cmo -thread -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/preemptive/lwt_preemptive.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -a -o src/preemptive/lwt-preemptive.cma src/preemptive/lwt_preemptive.cmo" 
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I src/preemptive -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/preemptive/lwt_preemptive.cmx -thread -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/preemptive/lwt_preemptive.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -a -o src/preemptive/lwt-preemptive.cmxa src/preemptive/lwt_preemptive.cmx" 
let _ = command "ocamlopt.opt -shared -linkall -o src/preemptive/lwt-preemptive.cmxs src/preemptive/lwt-preemptive.cmxa" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/simple_top/lwt_simple_top.ml > src/simple_top/lwt_simple_top.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I src/simple_top -I syntax -I tests -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/simple_top/lwt_simple_top.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/simple_top/lwt_simple_top.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -a -o src/simple_top/lwt-simple-top.cma src/simple_top/lwt_simple_top.cmo" 
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I src/simple_top -I syntax -I tests -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/simple_top/lwt_simple_top.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/simple_top/lwt_simple_top.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -a -o src/simple_top/lwt-simple-top.cmxa src/simple_top/lwt_simple_top.cmx" 
let _ = command "ocamlopt.opt -shared -linkall -o src/simple_top/lwt-simple-top.cmxs src/simple_top/lwt-simple-top.cmxa" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  '-parser' 'Camlp4QuotationCommon'  '-parser' 'Camlp4OCamlOriginalQuotationExpander'  '-parser' 'Camlp4GrammarParser' syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" examples/unix/relay.ml > examples/unix/relay.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I examples/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o examples/unix/relay.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" examples/unix/relay.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I examples/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o examples/unix/relay.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" examples/unix/relay.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -g -I src/unix -o examples/unix/relay.native -I %s/camlp4 %s/unix.cmxa %s/dynlink.cmxa %s/camlp4/camlp4lib.cmxa %s/bigarray.cmxa syntax/lwt-syntax.cmxa src/core/lwt.cmxa src/unix/lwt-unix.cmxa examples/unix/relay.cmx" ocaml_lib ocaml_lib ocaml_lib ocaml_lib ocaml_lib



let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  '-parser' 'Camlp4QuotationCommon'  '-parser' 'Camlp4OCamlOriginalQuotationExpander'  '-parser' 'Camlp4GrammarParser' syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" examples/unix/logging.ml > examples/unix/logging.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I examples/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o examples/unix/logging.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" examples/unix/logging.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I examples/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o examples/unix/logging.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" examples/unix/logging.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -g -I src/unix -o examples/unix/logging.native -I %s/camlp4 %s/unix.cmxa %s/dynlink.cmxa %s/camlp4/camlp4lib.cmxa %s/bigarray.cmxa syntax/lwt-syntax.cmxa src/core/lwt.cmxa src/unix/lwt-unix.cmxa examples/unix/logging.cmx" ocaml_lib ocaml_lib ocaml_lib ocaml_lib ocaml_lib



let _ = command "ocamlc.opt -a -o syntax/lwt-syntax-log.cma syntax/pa_lwt_log.cmo" 
let _ = command "ocamlopt.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_lwt_log.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' \" syntax/pa_lwt_log.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -a -o syntax/lwt-syntax-log.cmxa syntax/pa_lwt_log.cmx" 
let _ = command "ocamlopt.opt -shared -linkall -o syntax/lwt-syntax-log.cmxs syntax/lwt-syntax-log.cmxa" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  '-parser' 'Camlp4QuotationCommon'  '-parser' 'Camlp4OCamlOriginalQuotationExpander'  '-parser' 'Camlp4GrammarParser' syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" examples/unix/parallelize.ml > examples/unix/parallelize.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I syntax -I examples/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o examples/unix/parallelize.cmo -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" examples/unix/parallelize.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I syntax -I examples/unix -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o examples/unix/parallelize.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" examples/unix/parallelize.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -g -I src/unix -o examples/unix/parallelize.native -I %s/camlp4 %s/unix.cmxa %s/dynlink.cmxa %s/camlp4/camlp4lib.cmxa %s/bigarray.cmxa syntax/lwt-syntax.cmxa src/core/lwt.cmxa src/unix/lwt-unix.cmxa examples/unix/parallelize.cmx" ocaml_lib ocaml_lib ocaml_lib ocaml_lib ocaml_lib



let _ = command "ocamldep.opt -modules  src/extra/lwt_lib.mli > src/extra/lwt_lib.mli.depends" 
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I src/preemptive -I src/extra -I syntax -I tests -I src/simple_top -I src/react -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/extra/lwt_lib.cmi -thread src/extra/lwt_lib.mli" 
let _ = command "ocamldep.opt -modules -pp \"camlp4  '-I' '%s'  '-parser' 'o'  '-parser' 'op'  '-printer' 'p'  syntax/pa_lwt_options.cmo syntax/pa_lwt.cmo syntax/pa_lwt_log.cmo syntax/pa_optcomp.cmo -let 'windows=false' \" src/extra/lwt_lib.ml > src/extra/lwt_lib.ml.depends" ocaml_lib
let _ = command "ocamlc.opt -c -g -I src/core -I src/unix -I src/preemptive -I src/extra -I syntax -I tests -I src/simple_top -I src/react -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/extra/lwt_lib.cmo -thread -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/extra/lwt_lib.ml" ocaml_lib ocaml_lib
let _ = command "ocamlc.opt -a -o src/extra/lwt-extra.cma src/extra/lwt_lib.cmo" 
let _ = command "ocamlopt.opt -c -g -I src/core -I src/unix -I src/preemptive -I src/extra -I syntax -I tests -I src/simple_top -I src/react -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o src/extra/lwt_lib.cmx -thread -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' 'syntax/pa_lwt_options.cmo' 'syntax/pa_lwt.cmo' 'syntax/pa_lwt_log.cmo' 'syntax/pa_optcomp.cmo' '-let' 'windows=false'\" src/extra/lwt_lib.ml" ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -a -o src/extra/lwt-extra.cmxa src/extra/lwt_lib.cmx" 
let _ = command "ocamlopt.opt -shared -linkall -o src/extra/lwt-extra.cmxs src/extra/lwt-extra.cmxa" 
let _ = command "ocamlc.opt -a -o syntax/optcomp.cma syntax/pa_optcomp.cmo" 
let _ = command "ocamlopt.opt -c -g -I syntax -I tests -I src/simple_top -I src/react -I src/extra -I src/preemptive -I src/unix -I src/text -I src/glib -I src/core -I src/top -I src/ssl -o syntax/pa_optcomp.cmx -I %s/camlp4 -pp \"camlp4 '-I' '%s/camlp4' '-I' '%s/camlp4' '-I' '%s/camlp4' '-parser' 'o' '-parser' 'op' '-printer' 'p' '-parser' 'Camlp4QuotationCommon' '-parser' 'Camlp4OCamlOriginalQuotationExpander' '-parser' 'Camlp4GrammarParser' \" syntax/pa_optcomp.ml" ocaml_lib ocaml_lib ocaml_lib ocaml_lib
let _ = command "ocamlopt.opt -a -o syntax/optcomp.cmxa syntax/pa_optcomp.cmx" 
let _ = command "ocamlopt.opt -shared -linkall -o syntax/optcomp.cmxs syntax/optcomp.cmxa" 
let _ = command "ocamlc.opt -a -o syntax/lwt-syntax-options.cma syntax/pa_lwt_options.cmo" 
let _ = command "ocamlopt.opt -a -o syntax/lwt-syntax-options.cmxa syntax/pa_lwt_options.cmx" 
let _ = command "ocamlopt.opt -shared -linkall -o syntax/lwt-syntax-options.cmxs syntax/lwt-syntax-options.cmxa" 

